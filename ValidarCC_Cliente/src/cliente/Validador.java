
package cliente;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Validador", targetNamespace = "http://control/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Validador {


    /**
     * 
     * @param numero
     * @return
     *     returns boolean
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "validCC", targetNamespace = "http://control/", className = "cliente.ValidCC")
    @ResponseWrapper(localName = "validCCResponse", targetNamespace = "http://control/", className = "cliente.ValidCCResponse")
    @Action(input = "http://control/Validador/validCCRequest", output = "http://control/Validador/validCCResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://control/Validador/validCC/Fault/Exception")
    })
    public boolean validCC(
        @WebParam(name = "numero", targetNamespace = "")
        String numero)
        throws Exception_Exception
    ;

    /**
     * 
     * @param n
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isNumber", targetNamespace = "http://control/", className = "cliente.IsNumber")
    @ResponseWrapper(localName = "isNumberResponse", targetNamespace = "http://control/", className = "cliente.IsNumberResponse")
    @Action(input = "http://control/Validador/isNumberRequest", output = "http://control/Validador/isNumberResponse")
    public boolean isNumber(
        @WebParam(name = "n", targetNamespace = "")
        String n);

    /**
     * 
     * @param validacao
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "validCCNumber", targetNamespace = "http://control/", className = "cliente.ValidCCNumber")
    @ResponseWrapper(localName = "validCCNumberResponse", targetNamespace = "http://control/", className = "cliente.ValidCCNumberResponse")
    @Action(input = "http://control/Validador/validCCNumberRequest", output = "http://control/Validador/validCCNumberResponse")
    public boolean validCCNumber(
        @WebParam(name = "validacao", targetNamespace = "")
        String validacao);

    /**
     * 
     * @param idcartao
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCardID", targetNamespace = "http://control/", className = "cliente.GetCardID")
    @ResponseWrapper(localName = "getCardIDResponse", targetNamespace = "http://control/", className = "cliente.GetCardIDResponse")
    @Action(input = "http://control/Validador/getCardIDRequest", output = "http://control/Validador/getCardIDResponse")
    public int getCardID(
        @WebParam(name = "idcartao", targetNamespace = "")
        String idcartao);

    /**
     * 
     * @param bandeira
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCardName", targetNamespace = "http://control/", className = "cliente.GetCardName")
    @ResponseWrapper(localName = "getCardNameResponse", targetNamespace = "http://control/", className = "cliente.GetCardNameResponse")
    @Action(input = "http://control/Validador/getCardNameRequest", output = "http://control/Validador/getCardNameResponse")
    public String getCardName(
        @WebParam(name = "bandeira", targetNamespace = "")
        int bandeira);

}
